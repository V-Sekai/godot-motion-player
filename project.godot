; Engine configuration file.
; It's best edited using the editor UI and not directly,
; since the parameters that go here are not all obvious.
;
; Format:
;   [section] ; section goes between []
;   param=value ; assign values to parameters

config_version=4

_global_script_classes=[ {
"base": "Reference",
"class": "Morph",
"language": "GDScript",
"path": "res://addons/vmd_motion/common/Morph.gd"
}, {
"base": "Reference",
"class": "MorphBake",
"language": "GDScript",
"path": "res://addons/miku_motion_bake/common/Morph.gd"
}, {
"base": "Reference",
"class": "Motion",
"language": "GDScript",
"path": "res://addons/vmd_motion/common/Motion.gd"
}, {
"base": "Reference",
"class": "MotionBake",
"language": "GDScript",
"path": "res://addons/miku_motion_bake/common/Motion.gd"
}, {
"base": "Reference",
"class": "ShiftJISTable",
"language": "GDScript",
"path": "res://addons/vmd_motion/common/ShiftJISTable.gd"
}, {
"base": "Reference",
"class": "ShiftJISTableBake",
"language": "GDScript",
"path": "res://addons/miku_motion_bake/common/ShiftJISTable.gd"
}, {
"base": "Reference",
"class": "VMD",
"language": "GDScript",
"path": "res://addons/vmd_motion/common/VMD.gd"
}, {
"base": "Spatial",
"class": "VMDAnimatorBase",
"language": "GDScript",
"path": "res://addons/vmd_motion/runtime/VMDAnimatorBase.gd"
}, {
"base": "Spatial",
"class": "VMDPlayer",
"language": "GDScript",
"path": "res://addons/vmd_motion/runtime/VMDPlayer.gd"
}, {
"base": "Spatial",
"class": "VMDPlayerBake",
"language": "GDScript",
"path": "res://addons/miku_motion_bake/runtime/VMDPlayer.gd"
}, {
"base": "Reference",
"class": "VMDSkeleton",
"language": "GDScript",
"path": "res://addons/vmd_motion/common/Skeleton.gd"
}, {
"base": "Reference",
"class": "VMDSkeletonBake",
"language": "GDScript",
"path": "res://addons/miku_motion_bake/common/Skeleton.gd"
}, {
"base": "Reference",
"class": "VMDUtils",
"language": "GDScript",
"path": "res://addons/vmd_motion/common/VMDUtils.gd"
}, {
"base": "Reference",
"class": "VMDUtilsBake",
"language": "GDScript",
"path": "res://addons/miku_motion_bake/common/VMDUtils.gd"
}, {
"base": "VMDAnimatorBase",
"class": "VRMAnimator",
"language": "GDScript",
"path": "res://addons/vmd_motion/runtime/VRMAnimator.gd"
}, {
"base": "Spatial",
"class": "VRMAnimatorBake",
"language": "GDScript",
"path": "res://addons/miku_motion_bake/runtime/VMDAnimatorBake.gd"
}, {
"base": "Spatial",
"class": "VRMTopLevel",
"language": "GDScript",
"path": "res://addons/vrm/vrm_toplevel.gd"
} ]
_global_script_class_icons={
"Morph": "",
"MorphBake": "",
"Motion": "",
"MotionBake": "",
"ShiftJISTable": "",
"ShiftJISTableBake": "",
"VMD": "",
"VMDAnimatorBase": "",
"VMDPlayer": "",
"VMDPlayerBake": "",
"VMDSkeleton": "",
"VMDSkeletonBake": "",
"VMDUtils": "",
"VMDUtilsBake": "",
"VRMAnimator": "",
"VRMAnimatorBake": "",
"VRMTopLevel": ""
}

[application]

config/name="MikuVRMMotion"
run/main_scene="res://miku_vrm_motion/scenes/Scene.tscn"
config/icon="res://icon.png"

[autoload]

StandardBones="*res://addons/vmd_motion/common/StandardBones.gd"
EffekseerSystem="*res://addons/effekseer/src/EffekseerSystem.gdns"

[display]

window/dpi/allow_hidpi=true
window/vsync/use_vsync=false

[editor]

convert_text_resources_to_binary_on_export=true

[editor_plugins]

enabled=PoolStringArray( "res://addons/Godot-MToon-Shader/plugin.cfg", "res://addons/miku_motion_bake/plugin.cfg", "res://addons/vmd_motion/plugin.cfg", "res://addons/vrm/plugin.cfg" )

[gui]

theme/use_hidpi=true

[importer_defaults]

texture={
"compress/bptc_ldr": 0,
"compress/hdr_mode": 0,
"compress/lossy_quality": 0.7,
"compress/mode": 0,
"compress/normal_map": 0,
"detect_3d": true,
"flags/anisotropic": true,
"flags/filter": true,
"flags/mipmaps": true,
"flags/repeat": 0,
"flags/srgb": 2,
"process/HDR_as_SRGB": false,
"process/fix_alpha_border": true,
"process/invert_color": false,
"process/normal_map_invert_y": false,
"process/premult_alpha": false,
"size_limit": 0,
"stream": false,
"svg/scale": 1.0
}

[input]

backwards={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":83,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
 ]
}
left={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":65,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
 ]
}
right={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":68,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
 ]
}
forward={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":87,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
 ]
}
up={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":69,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
 ]
}
down={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":81,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
 ]
}
toggle_ui={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":72,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
 ]
}

[physics]

common/enable_pause_aware_picking=true

[rendering]

quality/filters/sharpen_intensity=0.5
quality/filters/anisotropic_filter_level=16
quality/filters/msaa=1
environment/default_environment="res://default_env.tres"
